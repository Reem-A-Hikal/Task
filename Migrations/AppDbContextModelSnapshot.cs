// <auto-generated />
using EmployeeCustomProp.Models.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeCustomProp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeCustomProp.Models.DropdownOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PropertyDefinitionId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PropertyDefinitionId");

                    b.ToTable("DropdownOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PropertyDefinitionId = 2,
                            Value = "HR"
                        },
                        new
                        {
                            Id = 2,
                            PropertyDefinitionId = 2,
                            Value = "IT"
                        },
                        new
                        {
                            Id = 3,
                            PropertyDefinitionId = 2,
                            Value = "Finance"
                        });
                });

            modelBuilder.Entity("EmployeeCustomProp.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeCustomProp.Models.PropertiesDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PropertyDefinitions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsRequired = true,
                            Name = "Age",
                            Type = "Integer"
                        },
                        new
                        {
                            Id = 2,
                            IsRequired = true,
                            Name = "Department",
                            Type = "Dropdown"
                        });
                });

            modelBuilder.Entity("EmployeeCustomProp.Models.PropertyValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyDefinitionId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PropertyDefinitionId");

                    b.ToTable("PropertyValues");
                });

            modelBuilder.Entity("EmployeeCustomProp.Models.DropdownOption", b =>
                {
                    b.HasOne("EmployeeCustomProp.Models.PropertiesDefinition", "PropertiesDefinition")
                        .WithMany("DropdownOptions")
                        .HasForeignKey("PropertyDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PropertiesDefinition");
                });

            modelBuilder.Entity("EmployeeCustomProp.Models.PropertyValue", b =>
                {
                    b.HasOne("EmployeeCustomProp.Models.Employee", "Employee")
                        .WithMany("PropertyValues")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeCustomProp.Models.PropertiesDefinition", "PropertyDefinition")
                        .WithMany()
                        .HasForeignKey("PropertyDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("PropertyDefinition");
                });

            modelBuilder.Entity("EmployeeCustomProp.Models.Employee", b =>
                {
                    b.Navigation("PropertyValues");
                });

            modelBuilder.Entity("EmployeeCustomProp.Models.PropertiesDefinition", b =>
                {
                    b.Navigation("DropdownOptions");
                });
#pragma warning restore 612, 618
        }
    }
}
