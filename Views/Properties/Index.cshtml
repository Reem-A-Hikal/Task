@model IEnumerable<EmployeeCustomProp.ViewModels.PropertyDefinitionVMs.PropertyDefinitionViewModel>

@{
    ViewData["Title"] = "Property Definitions";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div class="col">
            <h2 class="fw-bold text-primary">
                <i class="bi bi-list-check me-2"></i> Property Definitions
            </h2>
            <p class="text-muted ms-5">Manage your Properties</p>
        </div>
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-lg me-1"></i> Create New Property
        </a>
    </div>

    <div class="card border-0 shadow-sm rounded-3 overflow-hidden">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="bg-light">
                        <tr>
                            <th class="py-3 ps-4 text-start fw-semibold">
                                @Html.DisplayNameFor(model => model.Id)
                            </th>
                            <th class="py-3 text-start fw-semibold">@Html.DisplayNameFor(model => model.Name)</th>
                            <th class="py-3 text-start fw-semibold">@Html.DisplayNameFor(model => model.Type)</th>
                            <th class="py-3 text-start fw-semibold">@Html.DisplayNameFor(model => model.IsRequired)</th>
                            <th class="py-3 pe-4 text-end fw-semibold">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="border-top">
                                <td class="ps-4 text-start">@Html.DisplayFor(modelItem => item.Id)</td>
                                <td>
                                    <span class="fw-medium">@Html.DisplayFor(modelItem => item.Name)</span>
                                </td>
                                <td>
                                    <span class="badge bg-dark text-light">@Html.DisplayFor(modelItem => item.Type)</span>
                                </td>
                                <td>
                                    @if (item.IsRequired)
                                    {
                                        <span class="badge bg-success"><i class="bi bi-check-circle me-1"></i> Required</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary"><i class="bi bi-dash-circle me-1"></i> Optional</span>
                                    }
                                </td>
                                <td class="pe-4 text-end">
                                    <div class="d-flex justify-content-end gap-2">
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-pencil"></i> Edit
                                        </a>
                                        @* <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">
                                            <i class="bi bi-eye"></i> Details
                                        </a> *@
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .table-hover tbody tr:hover {
            background-color: rgba(13, 110, 253, 0.05);
        }

        .badge {
            padding: 0.35em 0.65em;
            font-weight: 500;
        }
    </style>
}